name: Docker Compose CI/CD for Create Catering Service

on:
  push:
    paths:
      - 'catering-service/create-catering/**'
    branches: ["qa"]
  pull_request:
    paths:
      - 'catering-service/create-catering/**'
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Build with Maven
        run: mvn clean package -DskipTests -f ./catering-service/create-catering/pom.xml

      - name: Rename JAR file
        run: |
          mv ./catering-service/create-catering/target/catering-service-0.0.1.jar ./catering-service/create-catering/create-catering-service.jar

      - name: Verify renamed JAR file
        run: ls ./catering-service/create-catering

  dockerize-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/create-catering-service:latest ./catering-service/create-catering

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/create-catering-service:latest

      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_CREATE_CATERING }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
              # Instalar Docker si no est치 instalado
              if ! command -v docker &> /dev/null; then
                echo "==> Installing Docker"
                sudo apt-get update -y
                sudo apt-get install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -a -G docker $(whoami)
              fi

              # Instalar Docker Compose si no est치 instalado
              if ! command -v docker-compose &> /dev/null; then
                echo "==> Installing Docker Compose"
                sudo curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
              fi

              # Crear archivo docker-compose.yml din치micamente
              echo "Creating docker-compose.yml..."
              cat > docker-compose.yml <<EOL
              version: '3.8'
              services:
                create-catering:
                  image: ${{ secrets.DOCKER_USERNAME }}/create-catering-service:latest
                  container_name: create-catering-service
                  environment:
                    SERVER_PORT: ${SERVER_PORT_CREATE_CATERING}
                    SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
                    EUREKA_CLIENT_SERVICE_URL: ${EUREKA_CLIENT_SERVICE_URL}
                    SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
                    SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
                    SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
                    SPRING_JPA_DATABASE_PLATFORM: ${SPRING_JPA_DATABASE_PLATFORM}
                    SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
                  ports:
                    - "8071:8071"
                  networks:
                    - catering-network
              networks:
                catering-network:
              EOL

              # Eliminar contenedor existente si es necesario
              echo "Stopping and removing existing containers..."
              sudo docker-compose down || true
              sudo docker rm -f create-catering-service || true

              # Iniciar servicios con docker-compose
              echo "Starting services with Docker Compose..."
              sudo docker-compose up -d

              # Verificar si el contenedor est치 corriendo
              echo "Verifying services..."
              sudo docker-compose ps
