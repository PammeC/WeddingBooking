name: Docker Compose CI/CD for Locations Create Service

on:
  push:
    paths:
      - 'Provinces-Locations/microservice-locations-create/**'
    branches: ["testMS"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Dependencies
        run: npm install
        working-directory: ./Provinces-Locations/microservice-locations-create
      - name: Verify Installation
        run: |
          npm list
          ls -la
        working-directory: ./Provinces-Locations/microservice-locations-create

  dockerize-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/locations-create-service:latest ./Provinces-Locations/microservice-locations-create
      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/locations-create-service:latest
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_LOCATIONS_CREATE }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY_M }}
          port: 22
          script: |
            # Instalar Docker si no está presente
            if ! command -v docker &> /dev/null; then
              echo "==> Instalando Docker"
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -a -G docker $(whoami)
            fi

            # Instalar Docker Compose si no está presente
            if ! command -v docker-compose &> /dev/null; then
              echo "==> Instalando Docker Compose"
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Crear docker-compose.yml dinámicamente con variables secretas
            echo "Creando docker-compose.yml..."
            cat > docker-compose.yml <<EOL
            version: '3.8'
            services:
              locations-create-service:
                image: ${{ secrets.DOCKER_HUB_USERNAME }}/locations-create-service:latest
                container_name: locations-create-service
                restart: always
                environment:
                  PORT: 4003
                  DB_HOST: ${{ secrets.DB_HOST_L_P }}
                  DB_USER: ${{ secrets.DB_USER_L_P }}
                  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                  DB_NAME_L_P: ${{ secrets.DB_NAME_L_P }}
                  DB_PORT: ${{ secrets.DB_PORT }}
                ports:
                  - "4003:4003"
                networks:
                  - locations-create-network
            networks:
              locations-create-network:
            EOL

            # Detener y eliminar contenedores previos correctamente
            echo "Deteniendo y eliminando contenedores previos..."
            sudo docker-compose down --remove-orphans || true
            sudo docker rm -f $(docker ps -aq --filter "name=locations-create-service") || true
            sudo docker rmi -f ${{ secrets.DOCKER_HUB_USERNAME }}/locations-create-service:latest || true

            # Descargar la última versión de la imagen
            echo "Descargando la última imagen de Docker..."
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/locations-create-service:latest

            # Levantar los servicios
            echo "Iniciando el servicio con Docker Compose..."
            sudo docker-compose up -d

            # Verificar si el contenedor está corriendo
            echo "Verificando contenedor en ejecución..."
            sudo docker ps | grep locations-create-service
