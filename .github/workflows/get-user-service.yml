name: Docker Compose CI/CD for Get User Service

on:
  push:
    paths:
      - 'Users/get-user-service/**'
    branches: ["testm"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install Dependencies
        run: npm install
        working-directory: ./Users/get-user-service
      
      - name: Verify Installation
        run: |
          npm list
          ls -la
        working-directory: ./Users/get-user-service

  dockerize-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/get-user-service-1:latest ./Users/get-user-service
      
      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/get-user-service-1:latest
      
      - name: Deploy with Docker Compose
        uses: appleboy/ssh-action@v0.1.8
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          PORT3001: ${{ secrets.PORT3001 }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
        with:
          host: ${{ secrets.EC2_HOST_GET_USER }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY_M }}
          port: 22
          envs: DOCKER_HUB_USERNAME,PORT3001,DB_HOST,DB_USER,DB_PASSWORD,DB_NAME,DB_PORT
          script: |
            # Verificar si Docker est치 instalado
            if ! command -v docker &> /dev/null; then
            echo "==> Installing Docker"
            sudo apt-get update -y
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -a -G docker $(whoami)
            else
            echo "Docker is already installed"
            fi

            # Verificar si Docker Compose est치 instalado
            if ! command -v docker-compose &> /dev/null; then
            echo "==> Installing Docker Compose"
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            else
            echo "Docker Compose is already installed"
            fi

            # Crear archivo docker-compose.yml din치micamente
            echo "Creating docker-compose.yml..."
            cat > docker-compose.yml <<EOL
            version: '3.8'
            services:
            get-user:
                image: ${DOCKER_HUB_USERNAME}/get-user-service-1:latest
                container_name: get-user-service-1
                environment:
                PORT: ${PORT3001}
                DB_HOST: ${DB_HOST}
                DB_USER: ${DB_USER}
                DB_PASSWORD: ${DB_PASSWORD}
                DB_NAME: ${DB_NAME}
                DB_PORT: ${DB_PORT}
                ports:
                - "${PORT3001}:${PORT3001}"
                networks:
                - user-network
            networks:
            user-network:
            EOL

            # Detener y eliminar servicios anteriores
            echo "Stopping existing containers..."
            sudo docker-compose down || true
            sudo docker rm -f get-user-service-1 || true

            # Iniciar servicios con docker-compose
            echo "Starting services with Docker Compose..."
            sudo docker-compose up -d

            # Verificar si el contenedor est치 corriendo
            echo "Verifying services..."
            sudo docker-compose ps