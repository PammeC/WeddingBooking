name: Docker CI/CD for Delete Photography Service

on:
  push:
    paths:
      - 'photography-service/delete-photography/**'
    branches: ["qa"]
  pull_request:
    paths:
      - 'photography-service/delete-photography/**'
    branches: ["main"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Build with Maven
        run: mvn clean package -DskipTests -f ./photography-service/delete-photography/pom.xml

      - name: Rename JAR file
        run: |
          mv ./photography-service/delete-photography/target/photography-service-0.0.1.jar ./photography-service/delete-photography/delete-photography-service.jar
  dockerize-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/delete-photography-service:latest ./photography-service/delete-photography
          docker push ${{ secrets.DOCKER_USERNAME }}/delete-photography-service:latest
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_PHOTOGRAPHY }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
              # Instalar Docker si no está instalado
              if ! command -v docker &> /dev/null; then
                echo "==> Installing Docker"
                sudo apt-get update -y
                sudo apt-get install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -a -G docker $(whoami)
              fi
              # Detener y eliminar cualquier contenedor en ejecución con el mismo nombre
              echo "Stopping and removing existing container..."
              sudo docker stop delete-photography-service || true
              sudo docker rm delete-photography-service || true
              # Eliminar imagen antigua
              echo "Removing old Docker image..."
              sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/delete-photography-service:latest || true
              # Descargar nueva imagen
              echo "Pulling latest Docker image..."
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/delete-photography-service:latest
              # Ejecutar nuevo contenedor
              echo "Starting new container..."
              sudo docker run -d \
                --name delete-photography-service \
                -p 8054:8054 \
                -e SERVER_PORT=${{ secrets.SERVER_PORT_DELETE_PHOTOGRAPHY }} \
                -e SPRING_APPLICATION_NAME=${{ secrets.SPRING_APPLICATION_NAME_DELETE_PHOTOGRAPHY }} \
                -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL_PHOTOGRAPHY }} \
                -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
                -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
                -e SPRING_JPA_DATABASE_PLATFORM=${{ secrets.SPRING_JPA_DATABASE_PLATFORM }} \
                -e SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }} \
                --restart=always \
                pammec/delete-photography-service:latest
                