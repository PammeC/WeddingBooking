name: Docker CI/CD for Provinces Delete Service

on:
  push:
    paths:
      - 'Provinces-Locations/microservice-provinces-delete/**'
    branches: ["testMS"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install Dependencies
        run: npm install
        working-directory: ./Provinces-Locations/microservice-provinces-delete
      - name: Verify Installation
        run: |
          npm list
          ls -la
        working-directory: ./Provinces-Locations/microservice-provinces-delete

  dockerize-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/provinces-delete-service:latest ./Provinces-Locations/microservice-provinces-delete
      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/provinces-delete-service:latest
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST_PROVINCES_DELETE }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY_M }}
          port: 22
          script: |
            set -e

            echo "==> Verificando Docker..."
            if ! command -v docker &> /dev/null; then
              echo "==> Instalando Docker"
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
            fi

            echo "==> Eliminando contenedor previo si existe..."
            sudo docker rm -f provinces-delete-service || true

            echo "==> Eliminando imágenes antiguas..."
            sudo docker image prune -f

            echo "==> Ejecutando nuevo contenedor..."
            sudo docker run -d \
              --name provinces-delete-service \
              -p 4000:4000 \
              -e PORT=4000 \
              -e DB_HOST=${{ secrets.DB_HOST_L_P }} \
              -e DB_USER=${{ secrets.DB_USER_L_P }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME_L_P }} \
              -e RABBITMQ_URL=${{ secrets.RABBITMQ_URL }} \
              --restart unless-stopped \
              ${{ secrets.DOCKER_HUB_USERNAME }}/provinces-delete-service:latest

            echo "==> Verificando contenedores en ejecución..."
            sudo docker ps
